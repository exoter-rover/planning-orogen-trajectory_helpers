name "trajectory_helpers"

import_types_from "trajectory_helpersTypes.hpp"
import_types_from "controldev/ControlDevTypes.hpp"
import_types_from "base"


task_context "TrajectoryRefiner" do
    needs_configuration
    
    property("goal_heading_tol", "double").
        doc("Goal heading tolerance in degrees")

    property("goal_position_tol", "double").
        doc("Goal position tolerance in meters")

    input_port('goal_pose', 'base/samples/RigidBodyState').
        doc("Goal pose in the world")
    
    input_port('waypoints_in', '/std/vector<base::Waypoint>').
        doc "Waypoint list."

    output_port('waypoints_out', '/std/vector<base::Waypoint>').
        doc "Waypoint list."

    port_driven
end


task_context "GoalGenerator" do
   needs_configuration

    # Properties    
    property('goal_index', 'int').
        doc("Index of the initial goal")
    property("goal_heading", "double").
        doc("Goal heading of the robot in degrees")
    property("joystick_deadband", "double").
        doc("Deadband of joystick displacement when calculating the heading.")
    
    property("xpos","/std/vector</double>").
        doc "List containing x-coordinates of possible goals."
    property("ypos","/std/vector</double>").
        doc "List containing y-coordinates of possible goals."
    
    # Input ports
    input_port("raw_command", "/controldev/RawCommand").
        doc("Input from joystick to toggle the panorama mode")

    # Output ports
    output_port('goal_pose', 'base/samples/RigidBodyState').
        doc("Goal pose for which the environment will be sensed.")
    output_port('current_goal', 'int').
        doc("Index of the current goal")

    port_driven
end